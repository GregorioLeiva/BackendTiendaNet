// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoFinal_TiendaNet.Config;

#nullable disable

namespace ProyectoFinal_TiendaNet.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250704225503_Finalizacion del Backend")]
    partial class FinalizaciondelBackend
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoFinal_TiendaNet.Admin.Model.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.Carrito.Model.Carrito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<bool>("Vacio")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Carritos");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.CarritoProducto.Model.CarritoProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CarritoId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarritoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("CarritoProductos");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.CategoriaProducto.Model.CategoriaProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.ToTable("CategoriaProductos");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.CategoriaTienda.Model.CategoriaTienda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TiendaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TiendaId");

                    b.ToTable("CategoriaTiendas");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.Compra.Model.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompradorId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoCompraId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<int>("MetodoPagoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompradorId");

                    b.HasIndex("EstadoCompraId");

                    b.HasIndex("MetodoPagoId");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.Comprador.Model.Comprador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DNI")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Compradores");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.DetalleCompra.Model.DetalleCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CompraId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("ProductoId");

                    b.ToTable("DetalleCompras");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.EstadoCompra.Model.EstadoCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstadoCompra");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Pendiente"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Finalizada"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Cancelada"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "En preparacion"
                        });
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.EstadoTienda.Model.EstadoTienda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstadoTienda");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Activa"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Inactiva"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "En proceso de eliminacion"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Eliminada"
                        });
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.MetodoPago.Model.MetodoPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MetodoPagos");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.Personalizacion.Model.Personalizacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BackgroundColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ButtonColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("LetterColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personalizaciones");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.Plantilla.Model.Plantilla", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BackgroundColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ButtonColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LetterColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Plantillas");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.Producto.Model.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecioUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("TiendaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TiendaId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.Rol.Model.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rol");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Comprador"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Vendedor"
                        });
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.Tienda.Model.Tienda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoTiendaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEliminacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreTienda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonalizacionId")
                        .HasColumnType("int");

                    b.Property<int>("VendedorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadoTiendaId");

                    b.HasIndex("PersonalizacionId")
                        .IsUnique();

                    b.HasIndex("VendedorId");

                    b.ToTable("Tiendas");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.Usuario.Model.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Leiva",
                            Contraseña = "12345678",
                            Email = "gleiva@frsn.utn.edu.ar",
                            FechaRegistro = new DateTime(2025, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Gregorio",
                            RolId = 1,
                            Username = "gleiva"
                        },
                        new
                        {
                            Id = 2,
                            Apellido = "Leiva",
                            Contraseña = "12345678",
                            Email = "gleiva@frsn.utn.edu.ar",
                            FechaRegistro = new DateTime(2025, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Gregorio",
                            RolId = 3,
                            Username = "gregorio"
                        },
                        new
                        {
                            Id = 3,
                            Apellido = "Leiva",
                            Contraseña = "12345678",
                            Email = "gleiva@frsn.utn.edu.ar",
                            FechaRegistro = new DateTime(2025, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "Gregorio",
                            RolId = 2,
                            Username = "goyo"
                        });
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.Vendedor.Model.Vendedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CUIT")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Vendedores");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.Admin.Model.Admin", b =>
                {
                    b.HasOne("ProyectoFinal_TiendaNet.Usuario.Model.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.Carrito.Model.Carrito", b =>
                {
                    b.HasOne("ProyectoFinal_TiendaNet.Usuario.Model.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.CarritoProducto.Model.CarritoProducto", b =>
                {
                    b.HasOne("ProyectoFinal_TiendaNet.Carrito.Model.Carrito", "Carrito")
                        .WithMany("Productos")
                        .HasForeignKey("CarritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoFinal_TiendaNet.Producto.Model.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrito");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.CategoriaProducto.Model.CategoriaProducto", b =>
                {
                    b.HasOne("ProyectoFinal_TiendaNet.Producto.Model.Producto", null)
                        .WithMany("Categorias")
                        .HasForeignKey("ProductoId");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.CategoriaTienda.Model.CategoriaTienda", b =>
                {
                    b.HasOne("ProyectoFinal_TiendaNet.Tienda.Model.Tienda", null)
                        .WithMany("CategoriasTienda")
                        .HasForeignKey("TiendaId");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.Compra.Model.Compra", b =>
                {
                    b.HasOne("ProyectoFinal_TiendaNet.Comprador.Model.Comprador", "Comprador")
                        .WithMany("Compras")
                        .HasForeignKey("CompradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoFinal_TiendaNet.EstadoCompra.Model.EstadoCompra", "EstadoCompra")
                        .WithMany()
                        .HasForeignKey("EstadoCompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoFinal_TiendaNet.MetodoPago.Model.MetodoPago", "MetodoPago")
                        .WithMany()
                        .HasForeignKey("MetodoPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comprador");

                    b.Navigation("EstadoCompra");

                    b.Navigation("MetodoPago");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.Comprador.Model.Comprador", b =>
                {
                    b.HasOne("ProyectoFinal_TiendaNet.Usuario.Model.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.DetalleCompra.Model.DetalleCompra", b =>
                {
                    b.HasOne("ProyectoFinal_TiendaNet.Compra.Model.Compra", "Compra")
                        .WithMany("Detalles")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoFinal_TiendaNet.Producto.Model.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.Producto.Model.Producto", b =>
                {
                    b.HasOne("ProyectoFinal_TiendaNet.Tienda.Model.Tienda", "Tienda")
                        .WithMany()
                        .HasForeignKey("TiendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tienda");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.Tienda.Model.Tienda", b =>
                {
                    b.HasOne("ProyectoFinal_TiendaNet.EstadoTienda.Model.EstadoTienda", "EstadoTienda")
                        .WithMany()
                        .HasForeignKey("EstadoTiendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoFinal_TiendaNet.Personalizacion.Model.Personalizacion", "Personalizacion")
                        .WithOne("Tienda")
                        .HasForeignKey("ProyectoFinal_TiendaNet.Tienda.Model.Tienda", "PersonalizacionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProyectoFinal_TiendaNet.Vendedor.Model.Vendedor", "Vendedor")
                        .WithMany("Tiendas")
                        .HasForeignKey("VendedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EstadoTienda");

                    b.Navigation("Personalizacion");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.Usuario.Model.Usuario", b =>
                {
                    b.HasOne("ProyectoFinal_TiendaNet.Rol.Model.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.Vendedor.Model.Vendedor", b =>
                {
                    b.HasOne("ProyectoFinal_TiendaNet.Usuario.Model.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.Carrito.Model.Carrito", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.Compra.Model.Compra", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.Comprador.Model.Comprador", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.Personalizacion.Model.Personalizacion", b =>
                {
                    b.Navigation("Tienda")
                        .IsRequired();
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.Producto.Model.Producto", b =>
                {
                    b.Navigation("Categorias");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.Tienda.Model.Tienda", b =>
                {
                    b.Navigation("CategoriasTienda");
                });

            modelBuilder.Entity("ProyectoFinal_TiendaNet.Vendedor.Model.Vendedor", b =>
                {
                    b.Navigation("Tiendas");
                });
#pragma warning restore 612, 618
        }
    }
}
